{"version":3,"sources":["chatapp/form.jsx","chatapp/home.jsx","chatapp/router.jsx","index.js"],"names":["Form","state","username","Paper","className","Typography","variant","gutterBottom","component","Grid","container","justify","alignItems","style","marginTop","item","xs","TextField","label","size","width","onChange","e","setState","target","value","props","setUsername","onKeyDown","keyCode","indexOf","history","push","sm","Button","color","disabled","this","onClick","Component","withRouter","Home","connected","messages","src","activeMsg","persons","componentDidUpdate","scrollIntoViewmsg","componentDidMount","socket","io","on","name","i","o","msg","data","message","console","log","obj","Object","keys","length","submitName","chatboxRef","current","scrollIntoView","behavior","emit","sendMessage","React","createRef","elevation","height","direction","margin","paddingLeft","paddingTop","overflowY","overflowX","map","index","ref","padding","spacing","type","placeholder","Hidden","xsDown","smUp","Fab","fontSize","Routing","basename","window","location","pathname","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91b122f4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Paper, TextField, Button, Grid, Typography } from \"@material-ui/core\";\r\nimport \"./css/chat.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    username: \"\",\r\n  };\r\n  render() {\r\n    return (\r\n      <Paper className=\"form-paper\">\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Chat with random strangers\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\" gutterBottom>\r\n          Welcome to the Quickchatzz free Chat Roulette.You Must be 13+ to start\r\n          a random chat with stranger.\r\n          <br />\r\n          How to chat with strangers safely?\r\n          <br />\r\n          Don't share your personal information or contacts,don't send any money\r\n          to strangers.\r\n          <br />\r\n          Enjoy the Quickchatzz!\r\n          <br />\r\n        </Typography>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          alignItems=\"center\"\r\n          style={{ marginTop: \"20px\" }}\r\n        >\r\n          <Grid item xs={9}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Username\"\r\n              size=\"small\"\r\n              style={{ width: \"100%\" }}\r\n              onChange={(e) => {\r\n                this.setState({ username: e.target.value });\r\n                this.props.setUsername(e.target.value);\r\n              }}\r\n              onKeyDown={(e) => {\r\n                if (\r\n                  e.keyCode == 13 &&\r\n                  this.state.username !== \"\" &&\r\n                  this.state.username.indexOf(\" \") !== 0\r\n                ) {\r\n                  this.props.history.push(\"/room\");\r\n                }\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3} sm={2}>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              disabled={\r\n                this.state.username == \"\" ||\r\n                this.state.username.indexOf(\" \") === 0\r\n              }\r\n              onClick={() => {\r\n                this.props.history.push(\"/room\");\r\n              }}\r\n            >\r\n              start\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Form);\r\n","import React, { Component } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  Fab,\r\n  Hidden,\r\n} from \"@material-ui/core\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport \"./css/chat.css\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.chatboxRef = React.createRef();\r\n  }\r\n\r\n  state = {\r\n    connected: false,\r\n    messages: [],\r\n    src: null,\r\n    username: \"saiteja\",\r\n    activeMsg: \"\",\r\n    persons: 0,\r\n  };\r\n  componentDidUpdate = () => {\r\n    this.scrollIntoViewmsg();\r\n  };\r\n  componentDidMount = () => {\r\n    this.socket = io(\"https://chat-app-using-node.herokuapp.com\");\r\n    this.socket.on(\"new-other-user-connected\", (name) => {\r\n      for (var i = 0; i < 1; i++) {\r\n        var o = {\r\n          name: name,\r\n          msg: \"Joined\",\r\n        };\r\n        var messages = this.state.messages;\r\n        messages.push(o);\r\n        this.setState({ messages });\r\n        this.setState({ persons: this.state.persons + 1 });\r\n      }\r\n    });\r\n    this.socket.on(\"msg-by-other\", (data) => {\r\n      for (var i = 0; i < 1; i++) {\r\n        var o = {\r\n          name: data.name,\r\n          msg: data.message,\r\n        };\r\n        console.log(\"msg by \", data.name, data.message);\r\n        var messages = this.state.messages;\r\n        messages.push(o);\r\n        console.log(messages);\r\n        this.setState({ messages });\r\n      }\r\n    });\r\n    this.socket.on(\"disconnected\", (name) => {\r\n      var o = {\r\n        name: name,\r\n        msg: \"left\",\r\n      };\r\n      var messages = this.state.messages;\r\n      messages.push(o);\r\n      console.log(messages);\r\n      this.setState({ messages });\r\n      this.setState({ persons: this.state.persons - 1 });\r\n    });\r\n    this.socket.on(\"number-of-users\", (obj) => {\r\n      var persons = Object.keys(obj).length;\r\n      this.setState({ persons });\r\n    });\r\n    this.setState({ username: this.props.username });\r\n    this.submitName();\r\n  };\r\n\r\n  //scroll last msg into view\r\n  scrollIntoViewmsg = () => {\r\n    this.chatboxRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  //submit the name\r\n  submitName = () => {\r\n    var o = {\r\n      name: \"You \",\r\n      msg: \"Joined\",\r\n    };\r\n    var messages = this.state.messages;\r\n    messages.push(o);\r\n    console.log(messages);\r\n    this.setState({ messages });\r\n    this.setState({ connected: true });\r\n    this.socket.emit(\"new-user-connected\", this.props.username);\r\n  };\r\n\r\n  //send the message\r\n  sendMessage = () => {\r\n    if (\r\n      this.state.activeMsg !== \"\" &&\r\n      this.state.activeMsg.indexOf(\" \") !== \"\"\r\n    ) {\r\n      this.scrollIntoViewmsg();\r\n      var o = {\r\n        name: \"You\",\r\n        msg: this.state.activeMsg,\r\n      };\r\n      var messages = this.state.messages;\r\n      messages.push(o);\r\n      console.log(messages);\r\n      this.setState({ messages });\r\n      this.socket.emit(\"send-message\", this.state.activeMsg);\r\n      this.setState({ activeMsg: \"\" });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Paper className=\"chat-paper\" elevation={3}>\r\n        <Grid\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n          }}\r\n          direction=\"column\"\r\n        >\r\n          <Grid\r\n            item\r\n            container\r\n            className=\"chat-nav\"\r\n            xs={12}\r\n            style={{ height: \"10%\" }}\r\n          >\r\n            <Grid item xs={2} sm={1}>\r\n              <GroupIcon\r\n                size=\"small\"\r\n                style={{ color: \"white\", margin: \"10px 13px\" }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={10} sm={11}>\r\n              <Typography\r\n                variant=\"body1\"\r\n                style={{\r\n                  color: \"white\",\r\n                  paddingLeft: \"10px\",\r\n                  paddingTop: \"4px\",\r\n                }}\r\n              >\r\n                Group Chat\r\n              </Typography>\r\n              <Typography\r\n                variant=\"body2\"\r\n                style={{ color: \"white\", paddingLeft: \"10px\" }}\r\n                gutterBottom\r\n              >\r\n                {this.state.persons} people in the chat\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{ overflowY: \"scroll\", overflowX: \"hidden\", height: \"80%\" }}\r\n          >\r\n            {this.state.messages.map((e, index) => {\r\n              if (e.msg == \"Joined\" || e.msg == \"left\") {\r\n                return (\r\n                  <div className=\"joined-msg\">\r\n                    {e.name} {e.msg}\r\n                  </div>\r\n                );\r\n              } else if (e.name == \"You\") {\r\n                return (\r\n                  <div className=\"msg-by-admin\">\r\n                    <Typography variant=\"body2\">{e.msg}</Typography>\r\n                  </div>\r\n                );\r\n              } else {\r\n                return (\r\n                  <div className=\"msg-by-other\">\r\n                    <div className=\"sender-name\">\r\n                      <Typography variant=\"body2\">{e.name}</Typography>{\" \"}\r\n                    </div>\r\n\r\n                    <Typography variant=\"body2\">{e.msg}</Typography>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n            <div style={{ width: \"100%\" }} ref={this.chatboxRef}></div>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{ height: \"12%\", padding: \"0px 6px\", paddingTop: \"10px\" }}\r\n            className=\"bottom-grid\"\r\n          >\r\n            <Grid\r\n              item\r\n              container\r\n              xs={12}\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n              spacing={2}\r\n            >\r\n              <Grid item xs={10} sm={10}>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Message..\"\r\n                  value={this.state.activeMsg}\r\n                  onChange={(e) => {\r\n                    this.setState({ activeMsg: e.target.value });\r\n                  }}\r\n                  onKeyDown={(e) => {\r\n                    if (e.keyCode == 13) {\r\n                      this.sendMessage();\r\n                    }\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={2} sm={2}>\r\n                <Hidden xsDown>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    variant=\"contained\"\r\n                    onClick={this.sendMessage}\r\n                  >\r\n                    Send\r\n                  </Button>\r\n                </Hidden>\r\n                <Hidden smUp>\r\n                  <Fab\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    style={{ width: \"35px\", height: \"20px\" }}\r\n                    onClick={this.sendMessage}\r\n                  >\r\n                    <SendIcon style={{ fontSize: \"0.9rem\" }} color=\"white\" />\r\n                  </Fab>\r\n                </Hidden>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Form from \"./form\";\r\nimport Home from \"./home\";\r\n\r\nclass Routing extends Component {\r\n  state = {\r\n    username: \"\",\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Router basename={window.location.pathname || \"\"}>\r\n        <Route path=\"/\" exact>\r\n          <Form\r\n            setUsername={(username) => {\r\n              this.setState({ username: username });\r\n            }}\r\n          />\r\n        </Route>\r\n        <Route path=\"/room\" exact>\r\n          <Home username={this.state.username} />\r\n        </Route>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routing;\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Routing from \"./chatapp/router\";\r\n\r\nReactDOM.render(<Routing />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}